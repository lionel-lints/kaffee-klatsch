var app = angular.module("homeApp", ['ngRoute', 'n3-line-chart']);

app.config(['$routeProvider', function($routeProvider) {
  $routeProvider
  .when('/', {
    controller : 'homeCtrl',
    templateUrl : "<%= asset_path('angulars/home/index.html') %>"
  })
  .when('#/about', {
    controller : 'homeCtrl',
    templateUrl : "<%= asset_path('angulars/home/about.html') %>"
  });
}]);

app.controller('homeCtrl', ['$scope', '$http', function($scope, $http) {
  $scope.logOutUser = function() {
    $http({
      method: 'POST',
      url: '/signout'
    }).then(function successCallback(response) {
      if (response.data){
        window.location = "/";
      } else {
        console.log(response);
        console.log("user was not logged out");
      }
    });
  };
}]);

app.controller('aboutCtrl', ['$scope', function($scope) {
}]);

app.controller('surveyCtrl', ['$scope', '$http', function($scope, $http) {
  $scope.surveyPage = true;
  $scope.pageSwitch = function (){
    $scope.surveyPage = !$scope.surveyPage;
  };
  $scope.addSurvey = function (){
    $http({
      method: 'POST',
      url: '/users/'+ $scope.user.id + '/surveys',
      data: {
        user_id: $scope.user.id,
        emotion: parseFloat(this.emotion),
        coffees: parseInt(this.coffees)
      }
    }).then(function successCallback(response) {
      if (response.data){
        $scope.emotion = '';
        $scope.coffees = '';
        $scope.surveyPage = true;
        window.location.reload(true);
      } else {
        console.log(response);
        console.log("survey failed");
      }
    });
  };
}]);

app.controller('coffeeChartCtrl', ['$scope', '$http', function($scope, $http) {
  var coffeeDataMax = 0;
  $scope.data = { coffeeDataset: [] };

  for (var i = 0; i < $scope.surveys.length; i++) {
    $scope.data.coffeeDataset.push({ x: new Date ($scope.surveys[i].updated_at), coffees: $scope.surveys[i].coffees});
    if ($scope.surveys[i].coffees > coffeedataMax) {
      coffeedataMax = $scope.surveys[i].coffees + 1;
    }
  }
  $scope.options = {
    series: [
      {
        axis: "y",
        dataset: "coffeeDataset",
        key: "coffees",
        label: "Coffees",
        color: "white",
        type: ['line'],
        id: 'mySeries0'
      }
    ],
    axes:
    {
      x: {key: "x", type: 'date', ticks:5, ticksShift: {y: 5, x: 0}},
      y: {min:0, max: coffeedataMax, ticks: 5}
    },
    margin:
    {
      top: 30,
      right: 30,
      bottom: 30,
      left: 30
    },
    grid:
    {
      x: false,
      y: false
    },
    drawLegend: false
  };

}]);

app.controller('emotionChartCtrl', ['$scope', '$http', function($scope, $http) {
  $scope.data = { emotionDataset: [] };
  for (var i = 0; i < $scope.surveys.length; i++) {
    $scope.data.emotionDataset.push({ x: new Date ($scope.surveys[i].updated_at) , emotion: $scope.surveys[i].emotion});
  }
  $scope.options = {
    series: [
      {
        axis: "y",
        dataset: "emotionDataset",
        key: "emotion",
        label: "Emotion",
        color: "white",
        type: ['line'],
        id: 'mySeries0'
      }
    ],
    axes: {
      x: {key: "x", type: 'date', ticks:5, ticksShift: {y: 5, x: 0}},
      y: {min:0, max: 5, ticks: 5}
    },
    margin:
    {
      top: 30,
      right: 30,
      bottom: 30,
      left: 30
    },
    grid:
    {
      x: false,
      y: false
    },
    drawLegend: false
  };

}]);

app.controller('tempChartCtrl', ['$scope', '$http', function($scope, $http) {
  var dataMax = 0;
  var dataMin = 100;
  $scope.data = { tempDataset: [] };
  for (var i = 0; i < $scope.surveys.length; i++) {
    $scope.data.tempDataset.push({ x: new Date ($scope.surveys[i].updated_at) , temp: $scope.surveys[i].currentTemp});
    if ($scope.surveys[i].currentTemp > dataMax) {
      dataMax = parseFloat($scope.surveys[i].currentTemp) + 15;
    }
    if ($scope.surveys[i].currentTemp < dataMin) {
      dataMin = parseFloat($scope.surveys[i].currentTemp) - 15;
    }
  }
  $scope.options = {
    series: [
      {
        axis: "y",
        dataset: "tempDataset",
        key: "temp",
        label: "Temperature",
        color: "white",
        type: ['line'],
        id: 'mySeries0'
      }
    ],
    axes: {
      x: {key: "x", type: 'date', ticks:5, ticksShift: {y: 5, x: 0}},
      y: {min: dataMin, max: dataMax, ticks: 5}
    },
    margin:
    {
      top: 30,
      right: 30,
      bottom: 30,
      left: 30
    },
    grid:
    {
      x: false,
      y: false
    },
    drawLegend: false
  };

}]);
